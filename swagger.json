{
  "openapi": "3.0.0",
  "info": {
    "title": "4SPOT backend API",
    "description": "API documentation in open api format specification for the backend API of the 4spot website.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Check server status",
        "responses": {
          "200": {
            "description": "Server is running"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login to the application",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "User already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/accept-terms": {
      "post": {
        "summary": "Accept terms of service",
        "responses": {
          "200": {
            "description": "Acceptance given successfully"
          },
          "400": {
            "description": "Acceptance already given or user not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/recover": {
      "post": {
        "summary": "Request password recovery",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recovery email sent successfully"
          },
          "400": {
            "description": "User does not exist"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/recover/{token}": {
      "post": {
        "summary": "Reset password using recovery token",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "summary": "Get user page",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User page retrieved successfully"
          },
          "400": {
            "description": "Could not find required user or server error"
          }
        }
      },
      "post": {
        "summary": "Update user page (follow/unfollow)",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "follow": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation(s) completed successfully"
          },
          "400": {
            "description": "No POST for self user page or server error"
          }
        }
      }
    },
    "/events/{eventCode}": {
      "get": {
        "summary": "Get event page",
        "parameters": [
          {
            "in": "path",
            "name": "eventCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event retrieved successfully"
          },
          "400": {
            "description": "Event does not exist or server error"
          }
        }
      }
    },
    "/map": {
      "post": {
        "summary": "Get events based on map coordinates",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "lng": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Events filtered successfully"
          },
          "400": {
            "description": "Request error or server error"
          }
        }
      }
    }
  }
}

